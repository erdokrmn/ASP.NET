// <auto-generated />
using System;
using BitirmeProjesi.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BitirmeProjesi.Migrations
{
    [DbContext(typeof(BitirmeProjesiDbContext))]
    [Migration("20240402195308_mig5")]
    partial class mig5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BitirmeProjesi.Models.Gemi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GemiAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GemiTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GemiyeBaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TahminiBitirmeSuresi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gemiler");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.GemiEnvanteri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GemiAdıId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParcaAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParcaMiktarı")
                        .HasColumnType("int");

                    b.Property<string>("Sfı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GemiAdıId");

                    b.ToTable("GemiEnvanterleri");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.GemiSureci", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CalısanPersonellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParcaAdıId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SürecTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CalısanPersonellerId");

                    b.HasIndex("ParcaAdıId");

                    b.ToTable("GemiSurecleri");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Malzeme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MalzemeAdet")
                        .HasColumnType("int");

                    b.Property<string>("MalzemeAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MalzemeAlınısTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("MalzemeFiyatı")
                        .HasColumnType("int");

                    b.Property<string>("MalzemeKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MalzemeSkt")
                        .HasColumnType("int");

                    b.Property<string>("MalzemeTürü")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ÜrünDurumu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Malzemeler");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Masraf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MasrafAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasrafTarihi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasrafTipi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasrafTutarı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Masraflar");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Personel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcilDurumdaUlaşılacakKişiNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CalısmaDurumu")
                        .HasColumnType("bit");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("bit");

                    b.Property<string>("DoğumYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoğumYılı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EDevletŞifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IseBaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IstenAyrılmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KanGrubu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Tevzi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CalısmaSaati")
                        .HasColumnType("int");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<int>("MesaiSaati")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TevziTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("Tevziler");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Zimmet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MalzemeSkt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VerilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ZimmetEdilenKisiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZimmetEdilenMalzemeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ZimmetEdilenKisiId");

                    b.HasIndex("ZimmetEdilenMalzemeId");

                    b.ToTable("Zimmetler");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.GemiEnvanteri", b =>
                {
                    b.HasOne("BitirmeProjesi.Models.Gemi", "GemiAdı")
                        .WithMany("gemiEnvanterileri")
                        .HasForeignKey("GemiAdıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GemiAdı");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.GemiSureci", b =>
                {
                    b.HasOne("BitirmeProjesi.Models.Personel", "CalısanPersoneller")
                        .WithMany("GemiSürecleri")
                        .HasForeignKey("CalısanPersonellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitirmeProjesi.Models.GemiEnvanteri", "ParcaAdı")
                        .WithMany("Parca")
                        .HasForeignKey("ParcaAdıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalısanPersoneller");

                    b.Navigation("ParcaAdı");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Tevzi", b =>
                {
                    b.HasOne("BitirmeProjesi.Models.Personel", "Personel")
                        .WithMany("Tevziler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Zimmet", b =>
                {
                    b.HasOne("BitirmeProjesi.Models.Personel", "ZimmetEdilenKisi")
                        .WithMany("ZimmetEdilenPersoneller")
                        .HasForeignKey("ZimmetEdilenKisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitirmeProjesi.Models.Malzeme", "ZimmetEdilenMalzeme")
                        .WithMany("ZimmetEdilenMalzemeler")
                        .HasForeignKey("ZimmetEdilenMalzemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZimmetEdilenKisi");

                    b.Navigation("ZimmetEdilenMalzeme");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Gemi", b =>
                {
                    b.Navigation("gemiEnvanterileri");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.GemiEnvanteri", b =>
                {
                    b.Navigation("Parca");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Malzeme", b =>
                {
                    b.Navigation("ZimmetEdilenMalzemeler");
                });

            modelBuilder.Entity("BitirmeProjesi.Models.Personel", b =>
                {
                    b.Navigation("GemiSürecleri");

                    b.Navigation("Tevziler");

                    b.Navigation("ZimmetEdilenPersoneller");
                });
#pragma warning restore 612, 618
        }
    }
}
